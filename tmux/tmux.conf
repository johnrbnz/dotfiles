# My .tmux.conf file
# inspired by
# http://media.pragprog.com/titles/bhtmux/code/workflows/tmux.confO
# and thougthbot

# NOTE: you no longer need to brew install reattach-to-user-namespace to be able to yank to the OSX clipboard

# KEY BINDINGS
# Free the original Ctrl-b prefix keybinding
unbind C-b

# Setting the prefix from C-b to C-a
set -g prefix C-a

# Ensure that we can send Ctrl-A to other apps by pressing Ctrl-A twice
bind C-a send-prefix

# Reload the file with prefix-r
bind r source-file ~/.tmux.conf \; display "Source command executed! ~/.tmux.conf reloaded!"

# WINDOWS, PANES
# start window/pane numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows after removing one
set -g renumber-windows on

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# splitting panes with the current file path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key | split-window -h  -c '#{pane_current_path}'

# creating a new window with the current file path
bind c new-window -c '#{pane_current_path}'

# Pane resizing
# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 20
bind -n S-Right resize-pane -R 20
bind -n S-Down resize-pane -D 10
bind -n S-Up resize-pane -U 10


# COLORS, LAYOUT
# improve colors
set -g default-terminal 'screen-256color'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# set the status line's colors
set -g status-bg '#444444'

# set the color of the window list
setw -g window-status-style fg=cyan 
# setw -g window-status-bg default 
# setw -g window-status-attr dim

# set colors for the active window
# setw -g window-status-current-fg black 
# setw -g window-status-current-bg yellow 
# setw -g window-status-current-attr bright
set -g window-style 'bg=colour234'


# pane colors
set -g pane-border-style fg='#333333',bg=colour234
# set -g pane-active-border-fg yellow 
set -g pane-active-border-style fg='#00afff',bg=colour234 

# Command / message line
set -g message-style fg=white,bg=black,bright

# Status line left side
set -g status-left-length 50 
set -g status-left "#[fg=green][#S] #[fg=yellow]#Iw #[fg=cyan]#Pp"

# Status line right side
# 15% | 28 Nov 18:15
set -g status-right "#(battery -t) | #[fg=cyan]%d %b %R"

# Update the status bar every sixty seconds
set -g status-interval 60

# Center the window list
set -g status-justify centre

# MORE SETTINGS

# increase scrollback lines
set -g history-limit 10000

#setting the delay between prefix and command
set -s escape-time 0

# enable vi keys.
setw -g mode-keys vi

# use command-line-like keyboard-bindings in tmux prompt (instead of default vim like bindings)
set-option -g status-keys "emacs"

# Break pane into new pane
bind-key b break-pane -d

# Use vim keybindings in copy mode
# NOTE: you no longer need to brew install reattach-to-user-namespace
# in order to be able to use this feature (connecting tmux to the OS X
# clipboard) when using iterm2 with activated "Applications in terminal may
# access clipboard" 
bind P paste-buffer
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle

# easy session switching
# bind C-s split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
#  bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

 # Easily swap a pane (targeted by pane number) with the current pane
#  bind-key s display-panes\; command-prompt -p "pane # "  "swap-pane -t '%%'"

# Breaking out sessions
bind-key C-b send-keys 'tat && exit' 'C-m'

# Killing sessions
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# https://github.com/julienXX/terminal-notifier/issues/115#issuecomment-71874815
# reattach each new window to the user bootstrap namespace
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL -l"

# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Quickly view system & process info in htop
bind-key h split-window -h "htop"

# Clear Screen
bind k send-keys -R \; send-keys C-l \; clear-history

bind-key g send-keys -t .2 "clear;tree -C -I 'info|pack' .git/objects" Enter
